// Code generated by ent, DO NOT EDIT.

package ent

import (
	"giraffecloud/internal/db/ent/schema"
	"giraffecloud/internal/db/ent/session"
	"giraffecloud/internal/db/ent/token"
	"giraffecloud/internal/db/ent/tunnel"
	"giraffecloud/internal/db/ent/user"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	sessionMixin := schema.Session{}.Mixin()
	sessionMixinFields0 := sessionMixin[0].Fields()
	_ = sessionMixinFields0
	sessionFields := schema.Session{}.Fields()
	_ = sessionFields
	// sessionDescCreatedAt is the schema descriptor for created_at field.
	sessionDescCreatedAt := sessionMixinFields0[0].Descriptor()
	// session.DefaultCreatedAt holds the default value on creation for the created_at field.
	session.DefaultCreatedAt = sessionDescCreatedAt.Default.(func() time.Time)
	// sessionDescUpdatedAt is the schema descriptor for updated_at field.
	sessionDescUpdatedAt := sessionMixinFields0[1].Descriptor()
	// session.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	session.DefaultUpdatedAt = sessionDescUpdatedAt.Default.(func() time.Time)
	// session.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	session.UpdateDefaultUpdatedAt = sessionDescUpdatedAt.UpdateDefault.(func() time.Time)
	// sessionDescIsActive is the schema descriptor for is_active field.
	sessionDescIsActive := sessionFields[4].Descriptor()
	// session.DefaultIsActive holds the default value on creation for the is_active field.
	session.DefaultIsActive = sessionDescIsActive.Default.(bool)
	tokenFields := schema.Token{}.Fields()
	_ = tokenFields
	// tokenDescName is the schema descriptor for name field.
	tokenDescName := tokenFields[2].Descriptor()
	// token.NameValidator is a validator for the "name" field. It is called by the builders before save.
	token.NameValidator = tokenDescName.Validators[0].(func(string) error)
	// tokenDescTokenHash is the schema descriptor for token_hash field.
	tokenDescTokenHash := tokenFields[3].Descriptor()
	// token.TokenHashValidator is a validator for the "token_hash" field. It is called by the builders before save.
	token.TokenHashValidator = tokenDescTokenHash.Validators[0].(func(string) error)
	// tokenDescCreatedAt is the schema descriptor for created_at field.
	tokenDescCreatedAt := tokenFields[4].Descriptor()
	// token.DefaultCreatedAt holds the default value on creation for the created_at field.
	token.DefaultCreatedAt = tokenDescCreatedAt.Default.(func() time.Time)
	// tokenDescLastUsedAt is the schema descriptor for last_used_at field.
	tokenDescLastUsedAt := tokenFields[5].Descriptor()
	// token.DefaultLastUsedAt holds the default value on creation for the last_used_at field.
	token.DefaultLastUsedAt = tokenDescLastUsedAt.Default.(func() time.Time)
	// token.UpdateDefaultLastUsedAt holds the default value on update for the last_used_at field.
	token.UpdateDefaultLastUsedAt = tokenDescLastUsedAt.UpdateDefault.(func() time.Time)
	// tokenDescID is the schema descriptor for id field.
	tokenDescID := tokenFields[0].Descriptor()
	// token.DefaultID holds the default value on creation for the id field.
	token.DefaultID = tokenDescID.Default.(func() uuid.UUID)
	tunnelMixin := schema.Tunnel{}.Mixin()
	tunnelMixinFields0 := tunnelMixin[0].Fields()
	_ = tunnelMixinFields0
	tunnelFields := schema.Tunnel{}.Fields()
	_ = tunnelFields
	// tunnelDescCreatedAt is the schema descriptor for created_at field.
	tunnelDescCreatedAt := tunnelMixinFields0[0].Descriptor()
	// tunnel.DefaultCreatedAt holds the default value on creation for the created_at field.
	tunnel.DefaultCreatedAt = tunnelDescCreatedAt.Default.(func() time.Time)
	// tunnelDescUpdatedAt is the schema descriptor for updated_at field.
	tunnelDescUpdatedAt := tunnelMixinFields0[1].Descriptor()
	// tunnel.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tunnel.DefaultUpdatedAt = tunnelDescUpdatedAt.Default.(func() time.Time)
	// tunnel.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	tunnel.UpdateDefaultUpdatedAt = tunnelDescUpdatedAt.UpdateDefault.(func() time.Time)
	// tunnelDescDomain is the schema descriptor for domain field.
	tunnelDescDomain := tunnelFields[0].Descriptor()
	// tunnel.DomainValidator is a validator for the "domain" field. It is called by the builders before save.
	tunnel.DomainValidator = tunnelDescDomain.Validators[0].(func(string) error)
	// tunnelDescToken is the schema descriptor for token field.
	tunnelDescToken := tunnelFields[1].Descriptor()
	// tunnel.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	tunnel.TokenValidator = tunnelDescToken.Validators[0].(func(string) error)
	// tunnelDescIsActive is the schema descriptor for is_active field.
	tunnelDescIsActive := tunnelFields[3].Descriptor()
	// tunnel.DefaultIsActive holds the default value on creation for the is_active field.
	tunnel.DefaultIsActive = tunnelDescIsActive.Default.(bool)
	// tunnelDescTargetPort is the schema descriptor for target_port field.
	tunnelDescTargetPort := tunnelFields[4].Descriptor()
	// tunnel.TargetPortValidator is a validator for the "target_port" field. It is called by the builders before save.
	tunnel.TargetPortValidator = tunnelDescTargetPort.Validators[0].(func(int) error)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[1].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[3].Descriptor()
	// user.DefaultName holds the default value on creation for the name field.
	user.DefaultName = userDescName.Default.(string)
	// userDescRole is the schema descriptor for role field.
	userDescRole := userFields[4].Descriptor()
	// user.DefaultRole holds the default value on creation for the role field.
	user.DefaultRole = userDescRole.Default.(string)
	// userDescIsActive is the schema descriptor for is_active field.
	userDescIsActive := userFields[5].Descriptor()
	// user.DefaultIsActive holds the default value on creation for the is_active field.
	user.DefaultIsActive = userDescIsActive.Default.(bool)
}
